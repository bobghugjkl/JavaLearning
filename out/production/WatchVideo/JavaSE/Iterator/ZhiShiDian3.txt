242~245
迭代器
通用的取出元素的方式，也是在顶层的
hasNext()：仍有元素可以迭代则返回true
next（）：返回迭代器的下一个元素
remove（）：从迭代器指向的collection中移除迭代器返回的最后一个元素

JavaSE.Collection<String>coll = new ArrayList<>();
        coll.add("姚明");
        coll.add("麦迪");
        coll.add("詹姆斯");
        //迭代器是有泛型的，迭代器的泛型跟着集合走，集合是什么迭代器就是什么
        //多态   接口                  实现类对象
        JavaSE.Iterator<String>iterator= coll.iterator();//获取迭代器的实现对象并且把指针指向集合-1索引
        boolean b1 = iterator.hasNext();
        System.out.println(b1);
        String s =iterator.next();
        System.out.println(s);//没有元素拿出元素会抛出异常（自己打打看看）
        //可以用循环优化，但是因为不知道多少元素所以用while
        while(iterator.hasNext()){
            System.out.println(iterator.next());
        }
        //用for
        for(JavaSE.Iterator<String>it = coll.iterator();it.hasNext();){
            String e =it.next();
            System.out.println(e);
        }


增强for循环，但是不可以增删只能遍历
如果想要在指定位置增删：
增加
ArrayList<String> list = new ArrayList<String>();
list.add("element1"); // add element to end of list
list.add(1, "element2"); // add element at index 1
删除
ArrayList<String> list = new ArrayList<String>();
list.add("element1");
list.add("element2");
list.remove(1); // remove element at index 1
list.remove("element1"); // remove first occurrence of element1

增强for：for（集合/数组数据类型 变量名：集合名/数组名）
 for(String e:coll){
            System.out.println(e);
        }